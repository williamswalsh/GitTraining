Working Tree - all files
DB - .git folder

Staged - changes stored to be commited
Commit - record to git database



File staged -> git reset HEAD <FILE> -> File unstaged -> git checkout <FILE> -> Gets original file

Commands:
---------
- git add -A -> Add all changes to staging area
- git reset HEAD <FILE> -> remove file from staging area
- git remote add origin master <URL>
- git push --set-upstream origin master -> First push requires you to set upstream
- git log --author="William"
- git diff <FILE>
shows differences between -> working copy and repo

-git diff --staged -> staging area vs repo

- git rm <FILE> -> removes from working copy and staging area
- must also commit change to delet file from working tree

Upstream -


Git add -> Add the changes to the staging area
Git commit -> add the changes to the local DB
Git push -> pushes changes to the remote repo(remote DB)

<<<<<<<< HEAD
my changes
======
changes in remote
>>>>>>> commit ID?


git checkout -b <BRANCH_NAME>

git merge <BRANCH_NAME> -> merges BRANCH_NAME into the branch that you are on
git branch -D branch_name -> Delete a local branch 


** Merge Conflict:
- pulling when the remote has changes on a line where wyou have made changes to teh same line which you have committed.


working copy >> Staging Area >> repository

